services:
  rabbitmq:
    image: rabbitmq
    healthcheck:
      test: ["CMD", "echo", "Testing"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks:
      - zennet
  selenium:
    image: selenium/standalone-chrome
    shm_size: 2g
    healthcheck:
      test: ["CMD", "echo", "Testing"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks:
      - zennet

  web:
    build:
      context: ./express-server/
      dockerfile: Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: always
    ports:
      - "8080:8080"
    networks:
      - zennet

  db:
    build:
      context: ./database/
      dockerfile: Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: always
    networks:
      - zennet
    volumes:
      - db_volume:/app/data/

  searchengine:
    build:
      context: ./search-engine/
      dockerfile: Dockerfile
    restart: always
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - zennet

  crawler:
    build:
      context: ./crawler/
      dockerfile: Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      selenium:
        condition: service_healthy
    restart: always
    networks:
      - zennet

networks:
  zennet:
    driver: bridge
volumes:
  db_volume:
